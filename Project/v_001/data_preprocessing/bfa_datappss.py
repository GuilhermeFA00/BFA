# -*- coding: utf-8 -*-
"""bfa_datappss.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UG9HSKgoUJaXr9tk9A_lIaxAXRuW2k6g
"""

#Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import requests
#Libraries

def create_dataframe():
  df = pd.DataFrame()
  for i in range(1, 13):
    if i <= 9:
      filename = "20210"+str(i)+"_ESTBAN.CSV"
      dfAux = pd.read_csv(filename, sep=";",encoding = "ISO-8859-1",  skiprows=2, warn_bad_lines=True, error_bad_lines=False)
      df = pd.concat([df,dfAux], ignore_index=True)
    else:
      filename = "2021"+str(i)+"_ESTBAN.CSV"
      dfAux = pd.read_csv(filename, sep=";",encoding = "ISO-8859-1",  skiprows=2, warn_bad_lines=True, error_bad_lines=False)
      df = pd.concat([df,dfAux], ignore_index=True)
  
  return df

#Data manipulation and cleaning functions


def summarize_cols(df):
  cols = df.columns
  selectedCols = []
  selectedCols = list(cols[0:7]) + list(cols[24:28]) + [cols[29], cols[-1]]

  df = df.drop(df.columns.difference(selectedCols), axis=1)
  
  return df

def remove_duplicates(df):
  df = df.drop_duplicates(keep=False)
  df = pd.DataFrame(df)

  return df

def replace_nan_values(df):
  #df = df.apply(lambda x: x.fillna(x.mean()),axis=0)
  df = df.dropna(subset=['CODMUN'])
  return df

def remove_outliers(df,columns,n_std):
    for col in columns:
        print('Working on column: {}'.format(col))
        
        mean = df[col].mean()
        sd = df[col].std()
        
        df = df[(df[col] <= mean+(n_std*sd))]
        
    return df


#Data manipulation and cleaning functions

#Vizualization functions


def see_boxplot_graph(df, x, y):
  df.boxplot(by =x, column =[y], grid = False)


#Vizualization functions

def json_to_dataframe(json_url, key, pop_key):
  response = requests.get(json_url)
  area = response.json()
  for item in area:
    for key in item[key]:
      dataJson = key
  dataJson.pop(pop_key)
  df = pd.json_normalize(dataJson['series'])